generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  handle    String    @unique @default(uuid())
  passhash  String
  salt      String    @db.VarChar(32)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  items     Item[]
}

model Item {
  id        String    @id @default(uuid())
  ownerId   Int
  createdAt DateTime  @default(now())
  title     String
  updatedAt DateTime?
  owner     User      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  photos    Photo[]
  itemTags  ItemTag[]
}

model Photo {
  id        String    @id @default(uuid())
  url       String    @unique @db.VarChar(256)
  itemId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  item      Item      @relation(fields: [itemId], references: [id], onDelete: Cascade)
}

model Tag {
  id        Int       @id @default(autoincrement())
  type      TagType
  name      String?   @unique
  key       String?
  value     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  ItemTags  ItemTag[]

  @@unique([key, value])
}

model ItemTag {
  id     Int    @id @default(autoincrement())
  itemId String
  tagId  Int
  item   Item   @relation(fields: [itemId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@unique([itemId, tagId])
}

enum TagType {
  NAME
  KEY_VALUE
}
