// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  handle    String   @unique @default(uuid())
  salt      String   @db.VarChar(32)
  passhash  String
  createdAt DateTime @default(now())
  updatedAt DateTime?
  Item      Item[]
}

model Item {
  id        String      @id @default(uuid())
  owner     User        @relation(fields: [userId], references: [id])
  userId    Int
  title     String
  createdAt DateTime    @default(now())
  updatedAt DateTime?
  ItemPhoto ItemPhoto[]
  ItemTag   ItemTag[]
}

model Photo {
  id        String      @id @default(uuid())
  url       String      @unique @db.VarChar(256)
  createdAt DateTime    @default(now())
  updatedAt DateTime?
  ItemPhoto ItemPhoto[]
}

model ItemPhoto {
  id      Int    @id @default(autoincrement())
  item    Item   @relation(fields: [itemId], references: [id])
  itemId  String
  photo   Photo  @relation(fields: [photoId], references: [id])
  photoId String

  @@unique([itemId, photoId])
}

enum TagType {
  NAME
  KEY_VALUE
}

model Tag {
  id        Int       @id @default(autoincrement())
  type      TagType
  name      String?   @unique
  key       String?
  value     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  ItemTag   ItemTag[]

  @@unique([key, value])
}

model ItemTag {
  id     Int    @id @default(autoincrement())
  item   Item   @relation(fields: [itemId], references: [id])
  itemId String
  tag    Tag    @relation(fields: [tagId], references: [id])
  tagId  Int

  @@unique([itemId, tagId])
}
